// <auto-generated />
using System;
using ACL.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ACL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240430134110_Init Migration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("MySql:CharSet", "utf8mb4")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ACL.Database.Models.AclBranch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("created_by_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<long>("Sequence")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("sequence");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("updated_by_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_branches", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<int>("AddedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("added_by")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address1");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address2");

                    b.Property<double>("AverageTurnover")
                        .HasColumnType("double(12,4)")
                        .HasColumnName("average_turnover");

                    b.Property<string>("Cemail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cemail");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("city");

                    b.Property<sbyte>("CmmiLevel")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("cmmi_level");

                    b.Property<string>("Cname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cname");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<double>("DailyRate")
                        .HasColumnType("double(12,4)")
                        .HasColumnName("daily_rate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("fax");

                    b.Property<double>("HourlyRate")
                        .HasColumnType("double(12,4)")
                        .HasColumnName("hourly_rate");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(191)
                        .HasColumnType("varchar(191)")
                        .HasColumnName("logo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("NoOfEmployees")
                        .HasColumnType("int(11)")
                        .HasColumnName("no_of_employees");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("postcode");

                    b.Property<string>("RegistrationNo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("registration_no");

                    b.Property<string>("Sector")
                        .HasMaxLength(191)
                        .HasColumnType("varchar(191)")
                        .HasColumnName("sector");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("state");

                    b.Property<sbyte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'")
                        .HasComment("1=active,0=inactive");

                    b.Property<string>("TaxNo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("tax_no");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(191)
                        .HasColumnType("varchar(191)")
                        .HasColumnName("tax_office");

                    b.Property<int>("Timezone")
                        .HasColumnType("int(11)")
                        .HasColumnName("timezone");

                    b.Property<string>("TimezoneValue")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("timezone_value");

                    b.Property<sbyte>("UniqueColumnName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("unique_column_name")
                        .HasDefaultValueSql("'1'")
                        .HasComment("1=>email,2=>username");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<double>("YearlyRevenue")
                        .HasColumnType("double(12,4)")
                        .HasColumnName("yearly_revenue");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_companies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AddedBy = 1,
                            Address1 = "A",
                            Address2 = "A2",
                            AverageTurnover = 0.0,
                            Cemail = "ssadmin@softrobotics.com",
                            City = "C",
                            CmmiLevel = (sbyte)0,
                            Cname = "Admin",
                            Country = "BD",
                            CreatedAt = new DateTime(2015, 11, 4, 1, 52, 1, 0, DateTimeKind.Unspecified),
                            DailyRate = 0.0,
                            Email = "ssadmin@softrobotics.com",
                            Fax = "Fax",
                            HourlyRate = 0.0,
                            Logo = "logo",
                            Name = "Default",
                            NoOfEmployees = 6,
                            Phone = "031",
                            Postcode = "4100",
                            RegistrationNo = "420",
                            State = "s",
                            Status = (sbyte)1,
                            TaxNo = "tax",
                            Timezone = 254,
                            TimezoneValue = "TimeZone",
                            UniqueColumnName = (sbyte)1,
                            UpdatedAt = new DateTime(2019, 3, 28, 13, 29, 33, 0, DateTimeKind.Unspecified),
                            YearlyRevenue = 0.0
                        });
                });

            modelBuilder.Entity("ACL.Database.Models.AclCompanyModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("module_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_company_modules", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclCountry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("created_by_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<long>("Sequence")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("sequence");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("updated_by_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_countries", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("display_name");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("icon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("Sequence")
                        .HasColumnType("int(11)")
                        .HasColumnName("sequence");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_modules", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1001L,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 46, 0, DateTimeKind.Unspecified),
                            DisplayName = "Company",
                            Icon = "<i class=\"fa fa-list-ul\"></i>",
                            Name = "Company",
                            Sequence = 6,
                            UpdatedAt = new DateTime(2019, 3, 20, 21, 52, 50, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1002L,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 46, 0, DateTimeKind.Unspecified),
                            DisplayName = "Master Data",
                            Icon = "<i class=\"fa fa-list-ul\"></i>",
                            Name = "Master Data",
                            Sequence = 2,
                            UpdatedAt = new DateTime(2019, 3, 26, 22, 38, 37, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1003L,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 47, 0, DateTimeKind.Unspecified),
                            DisplayName = "Access Control",
                            Icon = "<img src=\"adminca/assets/img/icons/access-control.svg\" />",
                            Name = "Access Control",
                            Sequence = 1099,
                            UpdatedAt = new DateTime(2016, 8, 6, 16, 24, 34, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ACL.Database.Models.AclPage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<sbyte>("AvailableToCompany")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("available_to_company");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("method_name");

                    b.Property<int>("MethodType")
                        .HasColumnType("int(11)")
                        .HasColumnName("method_type")
                        .HasComment("1=Post, 2=Get, 3=Put, 4=Delete");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<long>("SubModuleId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("sub_module_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_pages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 3001L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 51, 0, DateTimeKind.Unspecified),
                            MethodName = "index",
                            MethodType = 0,
                            ModuleId = 1001L,
                            Name = "Company List",
                            SubModuleId = 2001L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 51, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3002L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 52, 0, DateTimeKind.Unspecified),
                            MethodName = "create",
                            MethodType = 0,
                            ModuleId = 1001L,
                            Name = "Add New Company",
                            SubModuleId = 2001L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 52, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3003L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 52, 0, DateTimeKind.Unspecified),
                            MethodName = "edit",
                            MethodType = 2,
                            ModuleId = 1001L,
                            Name = "Modify Company",
                            SubModuleId = 2001L,
                            UpdatedAt = new DateTime(2019, 3, 27, 15, 3, 28, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3004L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 52, 0, DateTimeKind.Unspecified),
                            MethodName = "destroy",
                            MethodType = 2,
                            ModuleId = 1001L,
                            Name = "Delete Company",
                            SubModuleId = 2001L,
                            UpdatedAt = new DateTime(2019, 3, 26, 22, 42, 31, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3005L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 52, 0, DateTimeKind.Unspecified),
                            MethodName = "show",
                            MethodType = 0,
                            ModuleId = 1001L,
                            Name = "View Company",
                            SubModuleId = 2001L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 52, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3015L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 53, 0, DateTimeKind.Unspecified),
                            MethodName = "index",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "Module List",
                            SubModuleId = 2020L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 53, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3016L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 53, 0, DateTimeKind.Unspecified),
                            MethodName = "create",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "Add New Module",
                            SubModuleId = 2020L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 53, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3017L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 53, 0, DateTimeKind.Unspecified),
                            MethodName = "edit",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "Modify Module",
                            SubModuleId = 2020L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 53, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3018L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 54, 0, DateTimeKind.Unspecified),
                            MethodName = "destroy",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "Delete Module",
                            SubModuleId = 2020L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 54, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3019L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 54, 0, DateTimeKind.Unspecified),
                            MethodName = "view",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "View Module",
                            SubModuleId = 2020L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 54, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3025L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 54, 0, DateTimeKind.Unspecified),
                            MethodName = "index",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "Submodule List",
                            SubModuleId = 2021L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 54, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3026L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 54, 0, DateTimeKind.Unspecified),
                            MethodName = "create",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "Add New Submodule",
                            SubModuleId = 2021L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 54, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3027L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 54, 0, DateTimeKind.Unspecified),
                            MethodName = "edit",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "Modify Submodule",
                            SubModuleId = 2021L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 54, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3028L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 55, 0, DateTimeKind.Unspecified),
                            MethodName = "destroy",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "Delete Submodule",
                            SubModuleId = 2021L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3029L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 55, 0, DateTimeKind.Unspecified),
                            MethodName = "view",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "View Submodule",
                            SubModuleId = 2021L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3035L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 55, 0, DateTimeKind.Unspecified),
                            MethodName = "index",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "Page List",
                            SubModuleId = 2022L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3036L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 55, 0, DateTimeKind.Unspecified),
                            MethodName = "create",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "Add New Page",
                            SubModuleId = 2022L,
                            UpdatedAt = new DateTime(2016, 1, 21, 10, 44, 25, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3037L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 56, 0, DateTimeKind.Unspecified),
                            MethodName = "edit",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "Modify Page",
                            SubModuleId = 2022L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 56, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3038L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 56, 0, DateTimeKind.Unspecified),
                            MethodName = "destroy",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "Delete Page",
                            SubModuleId = 2022L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 56, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3039L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 56, 0, DateTimeKind.Unspecified),
                            MethodName = "view",
                            MethodType = 0,
                            ModuleId = 1002L,
                            Name = "View Page",
                            SubModuleId = 2022L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 56, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3045L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 56, 0, DateTimeKind.Unspecified),
                            MethodName = "index",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "User List",
                            SubModuleId = 2050L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 56, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3046L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 57, 0, DateTimeKind.Unspecified),
                            MethodName = "create",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "User Add",
                            SubModuleId = 2050L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 57, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3047L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 57, 0, DateTimeKind.Unspecified),
                            MethodName = "edit",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "User Edit",
                            SubModuleId = 2050L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 57, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3048L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 57, 0, DateTimeKind.Unspecified),
                            MethodName = "destroy",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "User Delete",
                            SubModuleId = 2050L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 57, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3049L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 11, 22, 23, 13, 47, 0, DateTimeKind.Unspecified),
                            MethodName = "view",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "User View",
                            SubModuleId = 2050L,
                            UpdatedAt = new DateTime(2015, 11, 22, 23, 13, 47, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3055L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 12, 2, 0, DateTimeKind.Unspecified),
                            MethodName = "index",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "Role List",
                            SubModuleId = 2051L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 12, 2, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3056L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 12, 2, 0, DateTimeKind.Unspecified),
                            MethodName = "create",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "Role Add",
                            SubModuleId = 2051L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 12, 2, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3057L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 12, 3, 0, DateTimeKind.Unspecified),
                            MethodName = "edit",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "Role Edit",
                            SubModuleId = 2051L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 12, 3, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3058L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 12, 3, 0, DateTimeKind.Unspecified),
                            MethodName = "destroy",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "Role Delete",
                            SubModuleId = 2051L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 12, 3, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3059L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 12, 3, 0, DateTimeKind.Unspecified),
                            MethodName = "view",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "Role View",
                            SubModuleId = 2051L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 12, 3, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3065L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 12, 3, 0, DateTimeKind.Unspecified),
                            MethodName = "index",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "UserGroup List",
                            SubModuleId = 2052L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 12, 3, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3066L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 12, 4, 0, DateTimeKind.Unspecified),
                            MethodName = "create",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "UserGroup Add",
                            SubModuleId = 2052L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 12, 4, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3067L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 12, 4, 0, DateTimeKind.Unspecified),
                            MethodName = "edit",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "UserGroup Edit",
                            SubModuleId = 2052L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 12, 4, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3068L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 12, 4, 0, DateTimeKind.Unspecified),
                            MethodName = "destroy",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "UserGroup Delete",
                            SubModuleId = 2052L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 12, 4, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3069L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 12, 4, 0, DateTimeKind.Unspecified),
                            MethodName = "view",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "UserGroup View",
                            SubModuleId = 2052L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 12, 4, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3075L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 12, 5, 0, DateTimeKind.Unspecified),
                            MethodName = "index",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "Usergroup Role Association",
                            SubModuleId = 2053L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 12, 5, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3076L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2021, 12, 9, 15, 10, 51, 0, DateTimeKind.Unspecified),
                            MethodName = "edit",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "Usergroup & Role Association Update",
                            SubModuleId = 2053L,
                            UpdatedAt = new DateTime(2021, 12, 9, 15, 10, 51, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3078L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 12, 5, 0, DateTimeKind.Unspecified),
                            MethodName = "index",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "Role & Page Association",
                            SubModuleId = 2054L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 12, 5, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3079L,
                            AvailableToCompany = (sbyte)1,
                            CreatedAt = new DateTime(2021, 12, 9, 15, 10, 51, 0, DateTimeKind.Unspecified),
                            MethodName = "edit",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "Role & Page Association Update",
                            SubModuleId = 2054L,
                            UpdatedAt = new DateTime(2021, 12, 9, 15, 10, 51, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3080L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 51, 0, DateTimeKind.Unspecified),
                            MethodName = "index",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "Company Module List",
                            SubModuleId = 2055L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 51, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3081L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 52, 0, DateTimeKind.Unspecified),
                            MethodName = "create",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "Add New Company Module",
                            SubModuleId = 2055L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 52, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3082L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 52, 0, DateTimeKind.Unspecified),
                            MethodName = "edit",
                            MethodType = 2,
                            ModuleId = 1003L,
                            Name = "Modify Company Module",
                            SubModuleId = 2055L,
                            UpdatedAt = new DateTime(2019, 3, 27, 15, 3, 28, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3083L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 52, 0, DateTimeKind.Unspecified),
                            MethodName = "destroy",
                            MethodType = 2,
                            ModuleId = 1003L,
                            Name = "Delete Company Module",
                            SubModuleId = 2055L,
                            UpdatedAt = new DateTime(2019, 3, 26, 22, 42, 31, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3084L,
                            AvailableToCompany = (sbyte)0,
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 52, 0, DateTimeKind.Unspecified),
                            MethodName = "show",
                            MethodType = 0,
                            ModuleId = 1003L,
                            Name = "View Company Module",
                            SubModuleId = 2055L,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 52, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ACL.Database.Models.AclPageRoute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<long?>("PageId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("page_id");

                    b.Property<string>("RouteName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("route_name");

                    b.Property<string>("RouteUrl")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("route_url");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PageId" }, "acl_page_routes_page_id_index");

                    b.ToTable("acl_page_routes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            PageId = 3001L,
                            RouteName = "acl.company.list",
                            RouteUrl = "companies"
                        },
                        new
                        {
                            Id = 2L,
                            PageId = 3002L,
                            RouteName = "acl.company.add",
                            RouteUrl = "companies/add"
                        },
                        new
                        {
                            Id = 3L,
                            PageId = 3003L,
                            RouteName = "acl.company.edit",
                            RouteUrl = "companies/edit/{id}"
                        },
                        new
                        {
                            Id = 4L,
                            PageId = 3004L,
                            RouteName = "acl.company.destroy",
                            RouteUrl = "companies/delete/{id}"
                        },
                        new
                        {
                            Id = 5L,
                            PageId = 3005L,
                            RouteName = "acl.company.show",
                            RouteUrl = "companies/view/{id}"
                        },
                        new
                        {
                            Id = 6L,
                            PageId = 3015L,
                            RouteName = "acl.module.list",
                            RouteUrl = "modules"
                        },
                        new
                        {
                            Id = 7L,
                            PageId = 3016L,
                            RouteName = "acl.module.add",
                            RouteUrl = "modules/add"
                        },
                        new
                        {
                            Id = 8L,
                            PageId = 3017L,
                            RouteName = "acl.module.edit",
                            RouteUrl = "modules/edit/{id}"
                        },
                        new
                        {
                            Id = 9L,
                            PageId = 3018L,
                            RouteName = "acl.module.destroy",
                            RouteUrl = "modules/delete/{id}"
                        },
                        new
                        {
                            Id = 10L,
                            PageId = 3019L,
                            RouteName = "acl.module.view",
                            RouteUrl = "modules/view/{id}"
                        },
                        new
                        {
                            Id = 11L,
                            PageId = 3080L,
                            RouteName = "acl.company_module.list",
                            RouteUrl = "company/modules"
                        },
                        new
                        {
                            Id = 12L,
                            PageId = 3081L,
                            RouteName = "acl.company_module.add",
                            RouteUrl = "company/modules/add"
                        },
                        new
                        {
                            Id = 13L,
                            PageId = 3082L,
                            RouteName = "acl.company_module.edit",
                            RouteUrl = "company/modules/edit/{id}"
                        },
                        new
                        {
                            Id = 14L,
                            PageId = 3083L,
                            RouteName = "acl.company_module.destroy",
                            RouteUrl = "company/modules/delete/{id}"
                        },
                        new
                        {
                            Id = 15L,
                            PageId = 3084L,
                            RouteName = "acl.company_module.view",
                            RouteUrl = "company/modules/view/{id}"
                        },
                        new
                        {
                            Id = 16L,
                            PageId = 3025L,
                            RouteName = "acl.submodule.list",
                            RouteUrl = "submodules"
                        },
                        new
                        {
                            Id = 17L,
                            PageId = 3026L,
                            RouteName = "acl.submodule.add",
                            RouteUrl = "submodules/add"
                        },
                        new
                        {
                            Id = 18L,
                            PageId = 3027L,
                            RouteName = "acl.submodule.edit",
                            RouteUrl = "submodules/edit/{id}"
                        },
                        new
                        {
                            Id = 19L,
                            PageId = 3028L,
                            RouteName = "acl.submodule.destroy",
                            RouteUrl = "submodules/delete/{id}"
                        },
                        new
                        {
                            Id = 20L,
                            PageId = 3029L,
                            RouteName = "acl.submodule.view",
                            RouteUrl = "submodules/view/{id}"
                        },
                        new
                        {
                            Id = 21L,
                            PageId = 3035L,
                            RouteName = "acl.page.list",
                            RouteUrl = "pages"
                        },
                        new
                        {
                            Id = 22L,
                            PageId = 3036L,
                            RouteName = "acl.page.add",
                            RouteUrl = "pages/add"
                        },
                        new
                        {
                            Id = 23L,
                            PageId = 3037L,
                            RouteName = "acl.page.edit",
                            RouteUrl = "pages/edit/{id}"
                        },
                        new
                        {
                            Id = 24L,
                            PageId = 3038L,
                            RouteName = "acl.page.destroy",
                            RouteUrl = "pages/delete/{id}"
                        },
                        new
                        {
                            Id = 25L,
                            PageId = 3039L,
                            RouteName = "acl.page.view",
                            RouteUrl = "pages/view/{id}"
                        },
                        new
                        {
                            Id = 26L,
                            PageId = 3045L,
                            RouteName = "acl.user.list",
                            RouteUrl = "users"
                        },
                        new
                        {
                            Id = 27L,
                            PageId = 3046L,
                            RouteName = "acl.user.add",
                            RouteUrl = "users/add"
                        },
                        new
                        {
                            Id = 28L,
                            PageId = 3047L,
                            RouteName = "acl.user.edit",
                            RouteUrl = "users/edit/{id}"
                        },
                        new
                        {
                            Id = 29L,
                            PageId = 3048L,
                            RouteName = "acl.user.destroy",
                            RouteUrl = "users/delete/{id}"
                        },
                        new
                        {
                            Id = 30L,
                            PageId = 3049L,
                            RouteName = "acl.user.view",
                            RouteUrl = "users/view/{id}"
                        },
                        new
                        {
                            Id = 31L,
                            PageId = 3055L,
                            RouteName = "acl.role.list",
                            RouteUrl = "roles"
                        },
                        new
                        {
                            Id = 32L,
                            PageId = 3056L,
                            RouteName = "acl.role.add",
                            RouteUrl = "roles/add"
                        },
                        new
                        {
                            Id = 33L,
                            PageId = 3057L,
                            RouteName = "acl.role.edit",
                            RouteUrl = "roles/edit/{id}"
                        },
                        new
                        {
                            Id = 34L,
                            PageId = 3058L,
                            RouteName = "acl.role.destroy",
                            RouteUrl = "roles/delete/{id}"
                        },
                        new
                        {
                            Id = 35L,
                            PageId = 3059L,
                            RouteName = "acl.role.view",
                            RouteUrl = "roles/view/{id}"
                        },
                        new
                        {
                            Id = 36L,
                            PageId = 3065L,
                            RouteName = "acl.usergroups.list",
                            RouteUrl = "usergroups"
                        },
                        new
                        {
                            Id = 37L,
                            PageId = 3066L,
                            RouteName = "acl.usergroups.add",
                            RouteUrl = "usergroups/add"
                        },
                        new
                        {
                            Id = 38L,
                            PageId = 3067L,
                            RouteName = "acl.usergroups.edit",
                            RouteUrl = "usergroups/edit/{id}"
                        },
                        new
                        {
                            Id = 39L,
                            PageId = 3068L,
                            RouteName = "acl.usergroups.destroy",
                            RouteUrl = "usergroups/delete/{id}"
                        },
                        new
                        {
                            Id = 40L,
                            PageId = 3069L,
                            RouteName = "acl.usergroups.view",
                            RouteUrl = "usergroups/view/{id}"
                        },
                        new
                        {
                            Id = 41L,
                            PageId = 3075L,
                            RouteName = "acl.usergroups.role.association",
                            RouteUrl = "usergroups/roles/{user_group_id}"
                        },
                        new
                        {
                            Id = 42L,
                            PageId = 3076L,
                            RouteName = "acl.usergroups.role.association.update",
                            RouteUrl = "usergroups/roles/update"
                        },
                        new
                        {
                            Id = 43L,
                            PageId = 3078L,
                            RouteName = "acl.role&page.association",
                            RouteUrl = "permissions/associations/{role_id}"
                        },
                        new
                        {
                            Id = 44L,
                            PageId = 3079L,
                            RouteName = "acl.role&page.association.update",
                            RouteUrl = "permissions/associations/update"
                        },
                        new
                        {
                            Id = 45L,
                            PageId = 3036L,
                            RouteName = "acl.page.route.add",
                            RouteUrl = "pages/routes/add"
                        },
                        new
                        {
                            Id = 46L,
                            PageId = 3037L,
                            RouteName = "acl.page.route.edit",
                            RouteUrl = "pages/routes/edit/{id}"
                        },
                        new
                        {
                            Id = 47L,
                            PageId = 3038L,
                            RouteName = "acl.page.route.destroy",
                            RouteUrl = "pages/routes/delete/{id}"
                        });
                });

            modelBuilder.Entity("ACL.Database.Models.AclRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("created_by_id")
                        .HasComment("creator auth ID");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<sbyte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("updated_by_id")
                        .HasComment("approve auth ID");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CompanyId = 1L,
                            CreatedAt = new DateTime(2019, 3, 21, 20, 38, 30, 0, DateTimeKind.Unspecified),
                            Name = "",
                            Status = (sbyte)1,
                            Title = "super-super-admin",
                            UpdatedAt = new DateTime(2015, 11, 9, 7, 17, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ACL.Database.Models.AclRolePage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<long>("PageId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("page_id");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RoleId", "PageId" }, "acl_role_pages_role_id_page_id_unique")
                        .IsUnique();

                    b.ToTable("acl_role_pages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            PageId = 3001L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            PageId = 3002L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            PageId = 3003L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            PageId = 3004L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            PageId = 3005L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            PageId = 3015L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            PageId = 3016L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            PageId = 3017L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            PageId = 3018L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            PageId = 3019L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            PageId = 3025L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 12L,
                            PageId = 3026L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 13L,
                            PageId = 3027L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 14L,
                            PageId = 3028L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 15L,
                            PageId = 3029L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 16L,
                            PageId = 3035L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 17L,
                            PageId = 3036L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 18L,
                            PageId = 3037L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 19L,
                            PageId = 3038L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 20L,
                            PageId = 3039L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 21L,
                            PageId = 3080L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 22L,
                            PageId = 3081L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 23L,
                            PageId = 3082L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 24L,
                            PageId = 3083L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 25L,
                            PageId = 3084L,
                            RoleId = 1L
                        });
                });

            modelBuilder.Entity("ACL.Database.Models.AclState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("country_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("created_by_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<long>("Sequence")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("sequence");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("updated_by_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_states", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclSubModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("controller_name");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("DefaultMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("default_method");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("display_name");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("icon");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("Sequence")
                        .HasColumnType("int(11)")
                        .HasColumnName("sequence");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_sub_modules", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2001L,
                            ControllerName = "CompanyController",
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 47, 0, DateTimeKind.Unspecified),
                            DefaultMethod = "index",
                            DisplayName = "Company Management",
                            Icon = "<i class=\"fa fa-angle-double-right\"></i>",
                            ModuleId = 1001L,
                            Name = "Company Management",
                            Sequence = 100,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 47, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2020L,
                            ControllerName = "ModuleController",
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 48, 0, DateTimeKind.Unspecified),
                            DefaultMethod = "index",
                            DisplayName = "Module Management",
                            Icon = "<i class=\"fa fa-angle-double-right\"></i>",
                            ModuleId = 1002L,
                            Name = "Module Management",
                            Sequence = 100,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 48, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2021L,
                            ControllerName = "SubModuleController",
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 48, 0, DateTimeKind.Unspecified),
                            DefaultMethod = "index",
                            DisplayName = "Sub Module Management",
                            Icon = "<i class=\"fa fa-angle-double-right\"></i>",
                            ModuleId = 1002L,
                            Name = "Sub Module Management",
                            Sequence = 101,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 48, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2022L,
                            ControllerName = "PageController",
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 48, 0, DateTimeKind.Unspecified),
                            DefaultMethod = "index",
                            DisplayName = "Page Management",
                            Icon = "<i class=\"fa fa-angle-double-right\"></i>",
                            ModuleId = 1002L,
                            Name = "Page Management",
                            Sequence = 102,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 48, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2050L,
                            ControllerName = "UserController",
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 49, 0, DateTimeKind.Unspecified),
                            DefaultMethod = "index",
                            DisplayName = "User Management",
                            Icon = "<i class=\"fa fa-angle-double-right\"></i>",
                            ModuleId = 1003L,
                            Name = "User Management",
                            Sequence = 18,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 49, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2051L,
                            ControllerName = "RoleController",
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 49, 0, DateTimeKind.Unspecified),
                            DefaultMethod = "index",
                            DisplayName = "Role Management",
                            Icon = "<i class=\"fa fa-angle-double-right\"></i>",
                            ModuleId = 1003L,
                            Name = "Role Management",
                            Sequence = 101,
                            UpdatedAt = new DateTime(2015, 12, 23, 14, 35, 45, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2052L,
                            ControllerName = "UsergroupController",
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 49, 0, DateTimeKind.Unspecified),
                            DefaultMethod = "index",
                            DisplayName = "User Group Management",
                            Icon = "<i class=\"fa fa-angle-double-right\"></i>",
                            ModuleId = 1003L,
                            Name = "User Group Management",
                            Sequence = 102,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 49, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2053L,
                            ControllerName = "UsergroupRoleController",
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 49, 0, DateTimeKind.Unspecified),
                            DefaultMethod = "index",
                            DisplayName = "Usergroup & Role Association",
                            Icon = "<i class=\"fa fa-angle-double-right\"></i>",
                            ModuleId = 1003L,
                            Name = "Usergroup & Role Association",
                            Sequence = 103,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 49, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2054L,
                            ControllerName = "RolePageController",
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 50, 0, DateTimeKind.Unspecified),
                            DefaultMethod = "index",
                            DisplayName = "Role & Page Association",
                            Icon = "<i class=\"fa fa-angle-double-right\"></i>",
                            ModuleId = 1003L,
                            Name = "Role & Page Association",
                            Sequence = 104,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 50, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2055L,
                            ControllerName = "CompanyModuleController",
                            CreatedAt = new DateTime(2015, 12, 9, 12, 10, 48, 0, DateTimeKind.Unspecified),
                            DefaultMethod = "index",
                            DisplayName = "Company Module Management",
                            Icon = "<i class=\"fa fa-angle-double-right\"></i>",
                            ModuleId = 1003L,
                            Name = "Company Module Management",
                            Sequence = 105,
                            UpdatedAt = new DateTime(2015, 12, 9, 12, 10, 48, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ACL.Database.Models.AclUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ActivatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("activated_at");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("AuthIdentifier")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("auth_identifier");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("avatar");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("city");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("company_id");

                    b.Property<int>("Country")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("country");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("created_by_id");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("first_name");

                    b.Property<sbyte?>("Gender")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("gender")
                        .HasComment("1=Male, 2=Female");

                    b.Property<string>("ImgPath")
                        .HasColumnType("text")
                        .HasColumnName("img_path");

                    b.Property<sbyte>("IsAdminVerified")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("is_admin_verified")
                        .HasComment("0=Pending, 1=Approved, 2=Not Approved, 3=Lock User");

                    b.Property<string>("Language")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("language")
                        .HasDefaultValueSql("'en'");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<DateTime?>("LoginAt")
                        .HasColumnType("datetime")
                        .HasColumnName("login_at")
                        .HasComment("user logged in time");

                    b.Property<sbyte>("OtpChannel")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("otp_channel")
                        .HasComment("0 => all channel like sms, email, 1 => only sms, 2=> only email");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<int>("PermissionVersion")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("permission_version");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("RememberToken")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remember_token");

                    b.Property<sbyte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'")
                        .HasComment("0=>Inactive or disable; 1=>enable or active; 2=> disabled or suspected;3= awaiting disable or banned;4=awaiting GSM");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int>("UserType")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("user_type")
                        .HasComment("USER_TYPE_SS_ADMIN = 0; USER_TYPE_S_ADMIN = 1; USER_TYPE_USER = 2");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Dhaka",
                            Avatar = "users/admin/c41353d1c1fcbdbd39f96ea46a3f769136952e79.png",
                            City = "19",
                            CompanyId = 1,
                            Country = 0,
                            CreatedAt = new DateTime(2018, 7, 10, 16, 21, 24, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Dob = new DateOnly(1994, 2, 22),
                            Email = "ssadmin@sipay.com.tr",
                            FirstName = "admin1",
                            Gender = (sbyte)1,
                            ImgPath = "storage/users/1/2019-04-18-07-49-28-ba4fe9be59df7b82f8243d2126070d76f5305b3e.png",
                            IsAdminVerified = (sbyte)1,
                            Language = "en",
                            LastName = "admin1",
                            OtpChannel = (sbyte)0,
                            Password = "Nop@ss1234",
                            PermissionVersion = 1,
                            Phone = "+8801788343704",
                            RememberToken = "",
                            Status = (sbyte)1,
                            UpdatedAt = new DateTime(2021, 8, 25, 5, 46, 27, 0, DateTimeKind.Unspecified),
                            UserType = 0,
                            Username = "rajibecbb"
                        });
                });

            modelBuilder.Entity("ACL.Database.Models.AclUserUsergroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("user_id");

                    b.Property<long>("UsergroupId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("usergroup_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_user_usergroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CompanyId = 1L,
                            CreatedAt = new DateTime(2024, 1, 24, 7, 23, 21, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2024, 1, 24, 7, 23, 23, 0, DateTimeKind.Unspecified),
                            UserId = 1L,
                            UsergroupId = 1L
                        });
                });

            modelBuilder.Entity("ACL.Database.Models.AclUsergroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<sbyte>("Category")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("category")
                        .HasComment("1 = Project manager, 2 = Developer, 3 = Reporter, 4 = Admin");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("DashboardUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("dashboard_url");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("group_name");

                    b.Property<sbyte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_usergroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Category = (sbyte)0,
                            CompanyId = 1L,
                            CreatedAt = new DateTime(2019, 3, 22, 8, 38, 12, 0, DateTimeKind.Unspecified),
                            GroupName = "super-super-admin-group",
                            Status = (sbyte)1,
                            UpdatedAt = new DateTime(2023, 11, 1, 19, 17, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ACL.Database.Models.AclUsergroupRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("UsergroupId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("usergroup_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_usergroup_roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CompanyId = 1L,
                            RoleId = 1L,
                            UsergroupId = 1L
                        });
                });

            modelBuilder.Entity("ACL.Database.Models.AclUsertypeSubmodule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int>("SubModuleId")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("sub_module_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<sbyte>("UserTypeId")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("user_type_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_usertype_submodules", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            SubModuleId = 2001,
                            UserTypeId = (sbyte)0
                        },
                        new
                        {
                            Id = 2L,
                            SubModuleId = 2020,
                            UserTypeId = (sbyte)0
                        },
                        new
                        {
                            Id = 3L,
                            SubModuleId = 2021,
                            UserTypeId = (sbyte)0
                        },
                        new
                        {
                            Id = 4L,
                            SubModuleId = 2022,
                            UserTypeId = (sbyte)0
                        },
                        new
                        {
                            Id = 5L,
                            SubModuleId = 2050,
                            UserTypeId = (sbyte)1
                        },
                        new
                        {
                            Id = 6L,
                            SubModuleId = 2051,
                            UserTypeId = (sbyte)1
                        },
                        new
                        {
                            Id = 7L,
                            SubModuleId = 2052,
                            UserTypeId = (sbyte)1
                        },
                        new
                        {
                            Id = 8L,
                            SubModuleId = 2053,
                            UserTypeId = (sbyte)1
                        },
                        new
                        {
                            Id = 9L,
                            SubModuleId = 2054,
                            UserTypeId = (sbyte)1
                        });
                });

            modelBuilder.Entity("ACL.Database.Models.Efmigrationshistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("MigrationId")
                        .HasName("PRIMARY");

                    b.ToTable("_efmigrationshistory", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.FailedJob", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("connection");

                    b.Property<string>("Exception")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("exception");

                    b.Property<DateTime>("FailedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("failed_at")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("payload");

                    b.Property<string>("Queue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("queue");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("uuid");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Uuid" }, "failed_jobs_uuid_unique")
                        .IsUnique();

                    b.ToTable("failed_jobs", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.Migration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("id");

                    b.Property<int>("Batch")
                        .HasColumnType("int(11)")
                        .HasColumnName("batch");

                    b.Property<string>("Migration1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("migration");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("migrations", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.PersonalAccessToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Abilities")
                        .HasColumnType("text")
                        .HasColumnName("abilities");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("expires_at");

                    b.Property<DateTime?>("LastUsedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("last_used_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("token");

                    b.Property<long>("TokenableId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("tokenable_id");

                    b.Property<string>("TokenableType")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tokenable_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Token" }, "personal_access_tokens_token_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "TokenableType", "TokenableId" }, "personal_access_tokens_tokenable_type_tokenable_id_index");

                    b.ToTable("personal_access_tokens", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
