// <auto-generated />
using System;
using ACL.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ACL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240430092614_Init migration")]
    partial class Initmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ACL.Database.Models.AclBranch", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<ulong>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<ulong>("CreatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("created_by_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<ulong>("Sequence")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("sequence");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<ulong>("UpdatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("updated_by_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_branches", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclCompany", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<int>("AddedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("added_by")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address1");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address2");

                    b.Property<double>("AverageTurnover")
                        .HasColumnType("double(12,4)")
                        .HasColumnName("average_turnover");

                    b.Property<string>("Cemail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cemail");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("city");

                    b.Property<sbyte>("CmmiLevel")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("cmmi_level");

                    b.Property<string>("Cname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cname");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<double>("DailyRate")
                        .HasColumnType("double(12,4)")
                        .HasColumnName("daily_rate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("fax");

                    b.Property<double>("HourlyRate")
                        .HasColumnType("double(12,4)")
                        .HasColumnName("hourly_rate");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(191)
                        .HasColumnType("varchar(191)")
                        .HasColumnName("logo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("NoOfEmployees")
                        .HasColumnType("int(11)")
                        .HasColumnName("no_of_employees");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("postcode");

                    b.Property<string>("RegistrationNo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("registration_no");

                    b.Property<string>("Sector")
                        .HasMaxLength(191)
                        .HasColumnType("varchar(191)")
                        .HasColumnName("sector");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("state");

                    b.Property<sbyte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'")
                        .HasComment("1=active,0=inactive");

                    b.Property<string>("TaxNo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("tax_no");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(191)
                        .HasColumnType("varchar(191)")
                        .HasColumnName("tax_office");

                    b.Property<int>("Timezone")
                        .HasColumnType("int(11)")
                        .HasColumnName("timezone");

                    b.Property<string>("TimezoneValue")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("timezone_value");

                    b.Property<sbyte>("UniqueColumnName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("unique_column_name")
                        .HasDefaultValueSql("'1'")
                        .HasComment("1=>email,2=>username");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<double>("YearlyRevenue")
                        .HasColumnType("double(12,4)")
                        .HasColumnName("yearly_revenue");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_companies", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclCompanyModule", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<ulong>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<ulong>("ModuleId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("module_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_company_modules", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclCountry", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<ulong>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<ulong>("CreatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("created_by_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<ulong>("Sequence")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("sequence");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<ulong>("UpdatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("updated_by_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_countries", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclModule", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("display_name");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("icon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("Sequence")
                        .HasColumnType("int(11)")
                        .HasColumnName("sequence");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_modules", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclPage", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<sbyte>("AvailableToCompany")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("available_to_company");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("method_name");

                    b.Property<int>("MethodType")
                        .HasColumnType("int(11)")
                        .HasColumnName("method_type")
                        .HasComment("1=Post, 2=Get, 3=Put, 4=Delete");

                    b.Property<ulong>("ModuleId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<ulong>("SubModuleId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("sub_module_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_pages", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclPageRoute", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<ulong?>("PageId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("page_id");

                    b.Property<string>("RouteName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("route_name");

                    b.Property<string>("RouteUrl")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("route_url");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PageId" }, "acl_page_routes_page_id_index");

                    b.ToTable("acl_page_routes", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclRole", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<ulong>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<ulong?>("CreatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("created_by_id")
                        .HasComment("creator auth ID");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<sbyte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<ulong?>("UpdatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("updated_by_id")
                        .HasComment("approve auth ID");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_roles", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclRolePage", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<ulong>("PageId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("page_id");

                    b.Property<ulong>("RoleId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RoleId", "PageId" }, "acl_role_pages_role_id_page_id_unique")
                        .IsUnique();

                    b.ToTable("acl_role_pages", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclState", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<ulong>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<ulong>("CountryId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("country_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<ulong>("CreatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("created_by_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<ulong>("Sequence")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("sequence");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<ulong>("UpdatedById")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("updated_by_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_states", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclSubModule", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("controller_name");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("DefaultMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("default_method");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("display_name");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("icon");

                    b.Property<ulong>("ModuleId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("Sequence")
                        .HasColumnType("int(11)")
                        .HasColumnName("sequence");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_sub_modules", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclUser", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<DateTime?>("ActivatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("activated_at");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("AuthIdentifier")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("auth_identifier");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("avatar");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("city");

                    b.Property<uint>("CompanyId")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("company_id");

                    b.Property<uint>("Country")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("country");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<uint>("CreatedById")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("created_by_id");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("first_name");

                    b.Property<sbyte?>("Gender")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("gender")
                        .HasComment("1=Male, 2=Female");

                    b.Property<string>("ImgPath")
                        .HasColumnType("text")
                        .HasColumnName("img_path");

                    b.Property<sbyte>("IsAdminVerified")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("is_admin_verified")
                        .HasComment("0=Pending, 1=Approved, 2=Not Approved, 3=Lock User");

                    b.Property<string>("Language")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("language")
                        .HasDefaultValueSql("'en'");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<DateTime?>("LoginAt")
                        .HasColumnType("datetime")
                        .HasColumnName("login_at")
                        .HasComment("user logged in time");

                    b.Property<sbyte>("OtpChannel")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("otp_channel")
                        .HasComment("0 => all channel like sms, email, 1 => only sms, 2=> only email");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<uint>("PermissionVersion")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("permission_version");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("RememberToken")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remember_token");

                    b.Property<sbyte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'")
                        .HasComment("0=>Inactive or disable; 1=>enable or active; 2=> disabled or suspected;3= awaiting disable or banned;4=awaiting GSM");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<uint>("UserType")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("user_type")
                        .HasComment("USER_TYPE_SS_ADMIN = 0; USER_TYPE_S_ADMIN = 1; USER_TYPE_USER = 2");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_users", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclUserUsergroup", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<ulong>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("user_id");

                    b.Property<ulong>("UsergroupId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("usergroup_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_user_usergroups", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclUsergroup", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<sbyte>("Category")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("category")
                        .HasComment("1 = Project manager, 2 = Developer, 3 = Reporter, 4 = Admin");

                    b.Property<ulong>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("DashboardUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("dashboard_url");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("group_name");

                    b.Property<sbyte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_usergroups", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclUsergroupRole", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<ulong>("CompanyId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<ulong>("RoleId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<ulong>("UsergroupId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("usergroup_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_usergroup_roles", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.AclUsertypeSubmodule", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<uint>("SubModuleId")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("sub_module_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<byte>("UserTypeId")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasColumnName("user_type_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("acl_usertype_submodules", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.Efmigrationshistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("MigrationId")
                        .HasName("PRIMARY");

                    b.ToTable("__efmigrationshistory", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.FailedJob", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("connection");

                    b.Property<string>("Exception")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("exception");

                    b.Property<DateTime>("FailedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("failed_at")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("payload");

                    b.Property<string>("Queue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("queue");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("uuid");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Uuid" }, "failed_jobs_uuid_unique")
                        .IsUnique();

                    b.ToTable("failed_jobs", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.Migration", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<int>("Batch")
                        .HasColumnType("int(11)")
                        .HasColumnName("batch");

                    b.Property<string>("Migration1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("migration");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("migrations", (string)null);
                });

            modelBuilder.Entity("ACL.Database.Models.PersonalAccessToken", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<string>("Abilities")
                        .HasColumnType("text")
                        .HasColumnName("abilities");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("expires_at");

                    b.Property<DateTime?>("LastUsedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("last_used_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("token");

                    b.Property<ulong>("TokenableId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("tokenable_id");

                    b.Property<string>("TokenableType")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tokenable_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Token" }, "personal_access_tokens_token_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "TokenableType", "TokenableId" }, "personal_access_tokens_tokenable_type_tokenable_id_index");

                    b.ToTable("personal_access_tokens", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
